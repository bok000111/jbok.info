name: Build

on:
  pull_request:
    branches:
      - dev
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted
    environment: jbok.info

    strategy:
      matrix:
        service: [axum, frontend, nginx]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.2.1

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3.2.0
      if: runner.arch != 'arm64'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.7.1

    - name: Build Docker images
      run: |
        set -o pipefail  # 파이프라인 실패 감지
        docker buildx bake '${{matrix.service}}' \
          --set '${{matrix.service}}.platform=linux/arm64' \
          --set '${{matrix.service}}.output=type=docker,dest=-' \
          --no-cache > '${{matrix.service}}.tar'

    - name: Create gpg pass file
      run: |
        echo '${{secrets.GPG_PASS}}' > '${{matrix.service}}.pass.txt'
        chmod 600 '${{matrix.service}}.pass.txt'

    - name: Encrypt Artifacts
      run: gpg --batch --symmetric --passphrase-file '${{matrix.service}}.pass.txt' '${{matrix.service}}.tar'

    - name: Clean up artifacts and secrets
      if: ${{github.base_ref == 'refs/heads/dev'}}
      run: rm -f '${{matrix.service}}.tar' '${{matrix.service}}.tar.gpg' '${{matrix.service}}.pass.txt'

  upload:
    needs: build
    if: ${{github.ref == 'refs/heads/main'}}
    runs-on: ubuntu-latest

    steps:
    - name: Upload artifacts
      uses: actions/upload-artifact@v4.4.3
      with:
        name: docker-images
        path: ./*.tar.gpg
        retention-days: 1
        overwrite: true

    - name: Clean up artifacts and secrets
      if: always()
      run: rm -f *.tar.gpg *.tar *.pass.txt