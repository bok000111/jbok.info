name: Deploy

on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment: jbok.info

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.2.1

    - name: Public IP
      id: ip
      uses: haythem/public-ip@v1.3
    
    - name: download artifacts
      uses: dawidd6/action-download-artifact@v6
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        workflow: build.yml
        workflow_conclusion: success
        name: docker-images
    
    - name: Create gpg pass file
      run: |
        echo '${{secrets.GPG_PASS}}' > pass.txt
        chmod 600 pass.txt
    
    - name: Decrypt images
      run: |
        for file in docker-images/*.tar.gpg; do
          gpg --batch --passphrase-file pass.txt --output "${file/.tar.gpg/.tar}" --decrypt "$file"
        done

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        role-to-assume: ${{secrets.GH_ACTION_RUNNER_AWS_ROLE_ARN}}
        aws-region: ${{secrets.GH_ACTION_RUNNER_AWS_REGION}}

    - name: Add Github Actions IP to Security group
      run: |
        aws ec2 authorize-security-group-ingress --group-id ${{secrets.GH_ACTION_RUNNER_AWS_SG_ID}} --protocol tcp --port 22 --cidr ${{steps.ip.outputs.ipv4}}/32

    - name: Create secret files
      run: |
        echo '${{secrets.ENV_PROD}}' > .env
        echo '${{secrets.NGINX_DEFAULT_CONF}}' > default.conf
        echo '${{secrets.NGINX_NGINX_CONF}}' > nginx.conf
        echo '${{secrets.NGINX_RENEW_CONF}}' > renew.conf

    - name: SCP images to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{secrets.AWS_EC2_HOSTNAME}}
        username: alpine
        key: ${{secrets.AWS_EC2_SSH_SECRET_KEY}}
        source: "docker-compose.yml,.env,*.tar"
        target: ~/jbok.info/

    - name: SCP secrets to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{secrets.AWS_EC2_HOSTNAME}}
        username: alpine
        key: ${{secrets.AWS_EC2_SSH_SECRET_KEY}}
        source: 'default.conf,nginx.conf,renew.conf'
        target: ~/secrets/nginx/

    - name: Run docker compose via ssh
      uses: appleboy/ssh-action@v1.1.0
      with:
        host: ${{secrets.AWS_EC2_HOSTNAME}}
        username: alpine
        key: ${{secrets.AWS_EC2_SSH_SECRET_KEY}}
        script: |
          cd ~/jbok.info && \
          docker compose down --remove-orphans --rmi all --volumes && \
          for i in *.tar; do docker load -i $i; done && \
          docker system prune -f --volumes && \
          docker compose up --detach --remove-orphans

    - name: Clean up artifacts and secrets
      if: always()
      run: |
        rm -rf *.tar .env default.conf nginx.conf renew.conf pass.txt
      
    - name: Revoke Github Actions IP from Security group
      if: always()
      run: aws ec2 revoke-security-group-ingress --group-id ${{secrets.GH_ACTION_RUNNER_AWS_SG_ID}} --protocol tcp --port 22 --cidr ${{steps.ip.outputs.ipv4}}/32
